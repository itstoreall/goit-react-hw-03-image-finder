{"version":3,"sources":["components/Searchbar/Searchbar.jsx","services/hitsApi.js","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","newHits","fetchHits","searchQuery","currentPage","per_page","axios","get","then","response","data","hits","ImageGalleryItem","src","alt","onClick","ImageGallery","map","hit","index","webformatURL","tags","id","Button","isLoading","shouldRenderLoadMoreButton","length","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","App","error","showModal","onChangeQuery","options","hitsApi","prevState","catch","finally","toggleModal","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88ca8213.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Searchbar extends Component {\n  state = { query: '' };\n\n  handleChange = e => {\n    this.setState({\n      query: e.currentTarget.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            value={this.state.query}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import axios from 'axios';\n\nconst API_KEY = '20531807-1479c72a34e3a5f5276de9d68';\nconst URL = 'https://pixabay.com/api/';\n\nconst fetchHits = ({ searchQuery = '', currentPage = 1, per_page = 12 }) => {\n  return axios\n    .get(\n      `${URL}?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${per_page}`,\n    )\n    .then(response => response.data.hits);\n};\n\nconst newHits = { fetchHits };\n\nexport default newHits;\n","import React from 'react';\n\nconst ImageGalleryItem = ({ src, alt, onClick }) => {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={onClick}>\n      <img src={src} alt={alt} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst ImageGallery = ({ hits, onClick }) => {\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {hits.map((hit, index) => {\n          return (\n            <ImageGalleryItem\n              key={`${index}${hit.id}`}\n              src={hit.webformatURL}\n              alt={hit.tags}\n              onClick={onClick}\n            />\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default ImageGallery;\n","import React from 'react';\n\nconst Button = ({ hits, isLoading, onClick }) => {\n  const shouldRenderLoadMoreButton = hits.length > 0 && !isLoading;\n\n  return (\n    <>\n      {shouldRenderLoadMoreButton && (\n        <button type=\"button\" onClick={onClick}>\n          Load more\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nconst modalRoot = document.querySelector('#modalRoot');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => e.code === 'Escape' && this.props.onClose();\n\n  handleBackdropClick = e =>\n    e.currentTarget === e.target && this.props.onClose();\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src=\"\" alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from 'react';\n// import axios from 'axios';\nimport Searchbar from './components/Searchbar';\nimport hitsApi from './services/hitsApi';\nimport Loader from 'react-loader-spinner';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.scss';\n\nclass App extends Component {\n  state = {\n    hits: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    prevState.searchQuery !== this.state.searchQuery && this.fetchHits();\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      hits: [],\n      error: null,\n    });\n  };\n\n  fetchHits = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { currentPage, searchQuery };\n\n    this.setState({ isLoading: true });\n\n    hitsApi\n      .fetchHits(options)\n      .then(hits => {\n        this.setState(prevState => ({\n          hits: [...prevState.hits, ...hits],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { hits, isLoading, error, showModal } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.onChangeQuery} />\n        {error && <span>ERROR</span>}\n        <ImageGallery hits={this.state.hits} onClick={this.toggleModal} />\n        {isLoading && (\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n        )}\n        <Button hits={hits} isLoading={isLoading} onClick={this.fetchHits} />\n        {showModal && <Modal onClose={this.toggleModal} />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}